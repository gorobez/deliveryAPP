{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,uBAAuB;AACtD;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAA6F,cAAc;AAC3G;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mEAAmE,uBAAuB;AAC1F;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,qEAAqE,UAAU;AAC/E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,eAAe;AACnC,mBAAmB,cAAc;AACjC,qBAAqB,gBAAgB;AACrC,sBAAsB,oBAAoB;AAC1C;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL;;;AAGA,iEAAe,SAAS;;;;;;;;;;;;;;;AC7O2B;;;AAGnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oDAAoD,iBAAiB;AACrE,kDAAkD,cAAc;AAChE,mDAAmD,YAAY;;AAE/D;AACA;AACA,4EAA4E,aAAa,SAAS,UAAU;AAC5G;AACA;AACA,8DAA8D,UAAU;AACxE,4EAA4E,WAAW;AACvF,oDAAoD,iBAAiB;AACrE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI,+DAAW;AACf,wBAAwB,wDAAwD;AAChF;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;;;AAGA,iEAAe,KAAK;;;;;;;;;;;;;;AClDpB;AACA;AACA;;AAEA;AACA;AACA;AACA,oCAAoC;;AAEpC;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB,SAAS;AACT;AACA;AACA,iEAAe,YAAY;;;;;;;;;;;;;;;;AC/CU;AACQ;;AAE7C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,YAAY,0DAAK,2EAA2E,0DAAS;AACrG;;AAEA;AACA;AACA,YAAY,0DAAK,kFAAkF,0DAAS;AAC5G;;AAEA;AACA;AACA,YAAY,0DAAK,2EAA2E,0DAAS;AACrG;;AAEA;AACA;AACA,YAAY,0DAAK,iFAAiF,0DAAS;AAC3G;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA,iEAAe,iBAAiB;;;;;;;;;;;;;;ACtFhC;AACA;;AAEA;AACA,2CAA2C,IAAI,YAAY,WAAW;AACtE;;AAEA;AACA;AACA;;;;;;;;UCTA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;ACNY;AACZ,CAA4C;AACiB;AACf;;;AAG9C;AACA,IAAI,uEAAiB;AACrB,IAAI,8DAAS;AACb,IAAI,6DAAY;AAChB,CAAC;;;AAGD","sources":["webpack://foodtest/./src/js/modules/addtocart.js","webpack://foodtest/./src/js/modules/cards.js","webpack://foodtest/./src/js/modules/sendForm.js","webpack://foodtest/./src/js/services/displayedProducts.js","webpack://foodtest/./src/js/services/services.js","webpack://foodtest/webpack/bootstrap","webpack://foodtest/webpack/runtime/define property getters","webpack://foodtest/webpack/runtime/hasOwnProperty shorthand","webpack://foodtest/webpack/runtime/make namespace object","webpack://foodtest/./src/js/script.js"],"sourcesContent":["async function addToCart(productList) {\n    const bagIcon = document.querySelector('[data-cart]');\n\n    let bagList = document.querySelector('.bag-list');\n    let totalCart = document.querySelector('.order-cart__total span');\n\n    productList?.forEach(element => {\n        console.log(element)\n    });\n    \n    // Initialize the cart object\n    let cart = JSON.parse(localStorage.getItem('cart'));\n    if (!cart) {\n      cart = {\n        items: [],\n        total: 0,\n        count: 0,\n      };\n    }\n    // Initialize the cart for display totalpriceItem\n    updateCart();\n    // Define the updateCart function\n    function updateCart() {\n      \n        // Update the total price in the cart\n        if (totalCart) {\n        totalCart.textContent = cart.total;\n        }\n\n        localStorage.setItem('cart', JSON.stringify(cart));\n     \n      // Update the bag list\n      if (bagList && cart.items.length === 0) {\n        bagList.innerHTML = '<p class = \"bag-list__empty\">Your cart is empty. Look at our catalog and choose the products that interest you.</p>';\n      } else if (bagList) {\n        bagList.innerHTML = '';\n      }\n\n      cart.items.forEach(item => {\n        // Create the product element\n        const product = document.createElement('div');\n        product.classList.add('bag-list__product');\n\n        // Add the product image\n        const picture = document.createElement('div');\n        picture.classList.add('bag-list__image')\n        const image = document.createElement('img')\n        image.src = item.image;\n        image.alt = item.name;\n        picture.append(image)\n        product.append(picture);\n\n        // Add the product details\n        const details = document.createElement('div');\n        details.classList.add('bag-list__details');\n\n        const description = document.createElement('div');\n        description.classList.add('bag-list__description');\n\n        const name = document.createElement('h4');\n        name.classList.add('bag-list__title')\n        name.textContent = item.name;\n        description.appendChild(name);\n\n        const price = document.createElement('p');\n        price.classList.add('bag-list__price')\n        price.textContent = `${item.price.toFixed(2)} EUR`;\n        details.appendChild(price);\n\n\n        // create the quantity input element\n        const quantityInput = document.createElement('div');\n        quantityInput.classList.add('bag-list__quantity-wrapper')\n        quantityInput.innerHTML = `\n        <span>quantity:</span>\n        <div data-quantity class=\"quantity\">\n          <button data-quantity-minus type=\"button\" class=\"quantity__button quantity__button_minus\"></button>\n          <div class=\"quantity__input\">\n            <input data-quantity-value autocomplete=\"off\" type=\"text\" name=\"form[]\" value=\"${item.quantity}\">\n          </div>\n          <button data-quantity-plus type=\"button\" class=\"quantity__button quantity__button_plus\"></button>\n        </div>\n        `;\n\n        // add an event listener to the quantity input\n        quantityInput.querySelector('[data-quantity]').addEventListener('click', (event) => {\n          const input = event.currentTarget.querySelector('[data-quantity-value]');\n          const value = parseInt(input.value);\n          const isPlus = event.target.matches('[data-quantity-plus]');\n\n          if (isPlus) {\n            input.value = value + 1;\n          } else {\n            input.value = Math.max(value - 1, 1);\n          }\n\n          item.quantity = parseInt(input.value);\n          item.total = item.price * item.quantity;\n          item.count = item.quantity;\n\n\n          localStorage.setItem('cart', JSON.stringify(cart));\n\n          // calculate the total for all items in the cart\n          let cartTotal = 0;\n          let cartCount = 0;\n          for (const cartItem of cart.items) {\n            cartTotal += cartItem.total;\n            cartCount += cartItem.count;\n          }\n          cart.total = cartTotal;\n          cart.count = cartCount;\n\n          if (cart.count <= 0) {\n            cart.count = 0;\n          }\n    \n          updateCart();\n        });\n     \n\n        // initialize the item total\n        item.total = item.price * item.quantity;\n\n        // add the quantity input to the details element\n        details.append(quantityInput);\n\n        const itemTotalPrice = document.createElement('div');\n        itemTotalPrice.classList.add('bag-list__total-price')\n        itemTotalPrice.innerHTML = `<span>Total price:</span> <p>${item.total.toFixed(2)} EUR </p>`;\n        details.append(itemTotalPrice);\n\n\n        const removeButton = document.createElement('button');\n        removeButton.textContent = 'Ã—';\n        removeButton.classList.add('bag-list__product-remove');\n        removeButton.addEventListener('click', () => {\n          const index = cart.items.indexOf(item);\n          cart.items.splice(index, 1);\n          cart.total -= item.price * item.quantity;\n          cart.count -= item.quantity;\n           if (cart.count <= 0) {\n            cart.count = 0;\n          }\n          updateCart();\n          \n          if (bagListProd.length == 0) {\n            bagList.classList.remove('bag-list--visible');\n          }\n        });\n\n        details.append(removeButton);\n\n        product.append(details);\n\n        if (bagList) {\n          bagList.append(product);\n        }\n      });\n    }\n\n     // Add click event listeners to the product cards\n        productList?.forEach(card => {\n      // Create a new scope for each product\n      (function () {\n        const addButton = card.querySelector('[data-addtobag]');\n    \n        addButton.addEventListener('click', (e) => {\n          // Get the product details from the data attributes\n            const price =  parseFloat(card.querySelector('[data-prod-price]').textContent);\n            const image = card.querySelector('[data-prod-img]').src;\n            const name = card.querySelector('[data-prod-title]').textContent;\n            const shopID = card.dataset.shopid;\n \n            const item = cart.items.find(item => item.name === name && item.price === price);\n                \n            const cardItem = {\n                price,\n                image,\n                name,\n                shopID,\n                quantity: 1,\n            };\n            \n            if (item) {\n                item.quantity++;\n            } else {\n            cart.items.push(cardItem);\n            }\n            cart.total += price;\n            cart.count++;\n            \n            localStorage.setItem('cart', JSON.stringify(cart));\n\n\n          // Animate the product image\n          const productId = e.target.closest('[data-product]').dataset.product;\n          const product = document.querySelector(`[data-product = \"${productId}\"]`);\n          const productImage = product.querySelector('img');\n\n          const imageClone = productImage.cloneNode(true),\n            imageCloneWidth = productImage.offsetWidth,\n            imageCloneHeight = productImage.offsetHeight,\n            imageCloneTop = productImage.getBoundingClientRect().top,\n            imageCloneLeft = productImage.getBoundingClientRect().left;\n                \n          imageClone.setAttribute('class', 'fly-image');\n          imageClone.style.cssText = `\n            left: ${imageCloneLeft}px;\n            top: ${imageCloneTop}px;\n            width: ${imageCloneWidth}px;\n            height: ${imageCloneHeight-50}px;\n          `;  \n          document.body.append(imageClone);\n\n          const bagTop = bagIcon.getBoundingClientRect().top,\n            bagLeft = bagIcon.getBoundingClientRect().left;\n\n          // new value\n          imageClone.style.cssText = `\n            left: ${bagLeft}px;\n            top: ${bagTop}px;\n            width: 0px;\n            height: 0px;\n            opacity: 0;\n          `; \n\n          imageClone.addEventListener('transitionend', () => {\n            updateCart();\n            imageClone.remove();\n          })\n        });\n      })();\n    });\n}\n\n\nexport default addToCart;","import { getResource } from \"../services/services\";\n\n\nfunction cards(endpoint, addclass, callback) {\n        class Card {\n        constructor(picture, name, description, price, dataProduct, shopId, parentelector, addclass) {\n            this.picture = picture;\n            this.name = name;\n            this.description = description;\n            this.price = price;\n            this.dataProduct = dataProduct;\n            this.shopId = shopId;\n            this.parent = document.querySelector(parentelector);\n            this.addclass = addclass;\n        }\n\n            render() {\n            const element = document.createElement('div');\n            element.setAttribute('data-product', `${this.dataProduct}`);\n            element.classList.add(\"item-menu\", `${this.addclass}`);\n            element.setAttribute('data-shopid', `${this.shopId}`);\n\n            element.innerHTML = `\n                <div class=\"item-menu__image\">\n                    <img data-prod-img src=\"http://localhost:4000/uploads/${this.picture}\" alt=\"${this.name}\">\n                </div>\n                <div class=\"item-menu__body\">\n                <h2 data-prod-title class=\"item-menu__name\">${this.name}</h2>\n                <p class=\"item-menu__price\">Price: <span data-prod-price >${this.price}</span> $</p>\n                <p class=\"item-menu__description\">${this.description}</p>\n                <button data-addtobag class=\"item-menu__button\">Add to cart</button>\n                </div>\n            `;\n\n            this.parent.append(element)\n        }\n    }\n\n   // Make a GET request to fetch the products\n    getResource(endpoint, (data) => {\n        data.forEach(({ picture, name, description, price, dataProduct, shopId }) => {\n            new Card(picture, name, description, price, dataProduct, shopId, '.menu', addclass).render();\n        });\n        console.log(data)\n        const productList = document.querySelectorAll('[data-product]');\n        callback(productList); \n    });\n}\n\n\nexport default cards;","// Get a reference to the form element\nfunction saveDadaForm() {\n    const form = document.getElementById('save');\n\n    if (form) {\n        // Add an event listener to the form submit event\n        form.addEventListener('submit', (event) => {\n            event.preventDefault(); // Prevent the default form submission\n\n            // Get the form data\n            const formData = new FormData(form);\n\n            // Create an object to hold the form data\n            const data = {};\n            formData.forEach((value, key) => {\n                data[key] = value;\n            });\n\n            // Retrieve the product list from local storage\n            const productList = JSON.parse(localStorage.getItem('cart'));\n\n            // Add the product list to the data object\n            data.productList = productList;\n\n            // Make an HTTP POST request to the server\n            fetch('http://localhost:4000/submit', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data),\n            })\n                .then((response) => {\n                    if (response.ok) {\n                        console.log('Form submitted successfully');\n                        // Reset the form\n                        form.reset();\n                    } else {\n                        console.error('Failed to submit the form');\n                    }\n                })\n                .catch((error) => {\n                    console.error('An error occurred while submitting the form:', error);\n                });\n        });\n    }\n}\nexport default saveDadaForm;","import cards from \"../modules/cards\";\nimport addToCart from \"../modules/addtocart\";\n\n    function displayedProducts() {\n        const shopPage = document.querySelector('.shop')\n        if(shopPage) {\n\n        const buttonKFC = document.querySelector('[data-shop=\"kfc\"]');\n        buttonKFC.classList.add('_active');\n        displayKFCProducts();\n        const menu = document.querySelector('.menu')\n\n        // Function to check if products request are displayed\n        function areProductsDisplayed(className) {\n            const products = document.querySelectorAll(className);\n            return products.length > 0;\n        }\n\n        // Function to remove active class from all shop buttons\n        function removeActiveClassFromButtons() {\n            const shopButtons = document.querySelectorAll('[data-shop]');\n            shopButtons.forEach(button => {\n                button.classList.remove('_active');\n            });\n        }\n\n        // Function to fetch and display products for \"kfc\" request\n        function displayKFCProducts() {\n            cards(\"http://localhost:4000/products/60c81d4d1f29cd001b0dbafb\", \"kfc-product\", addToCart);\n        }\n\n        // Function to fetch and display products for \"Burger King\" request\n        function displayBurgerKingProducts() {\n            cards(\"http://localhost:4000/products/647758309bc4624350fe97c3\", \"burgerking-product\", addToCart);\n        }\n\n        // Function to fetch and display products for \"McDonald's\" request\n        function displayMcDonaldsProducts() {\n            cards(\"http://localhost:4000/products/64778a23f790daab75c30200\", \"mac-product\", addToCart);\n        }\n\n        // Function to fetch and display products for \"Big Burger\" request\n        function displayBigburgerProducts() {\n            cards(\"http://localhost:4000/products/64779eab28569c9f968b9a01\", \"bigburger-product\", addToCart);\n        }\n\n\n        document.addEventListener(\"click\", function (e) {\n            const targerElement = e.target;\n\n            // Event listener for \"kfc\" button click\n            if (targerElement.dataset.shop === \"kfc\" && !areProductsDisplayed(\".kfc-product\")) {\n                menu.innerHTML = ''\n                removeActiveClassFromButtons();\n                targerElement.classList.add('_active');\n                displayKFCProducts();\n            }\n\n            // Event listener for \"burger king\" button click\n            if (targerElement.dataset.shop === \"burgerking\" && !areProductsDisplayed(\".burgerking-product\")) {\n                menu.innerHTML = ''\n                removeActiveClassFromButtons();\n                targerElement.classList.add('_active');\n                displayBurgerKingProducts();\n            }\n\n            // Event listener for \"McDonalds\" button click\n            if (targerElement.dataset.shop === \"mcdonalds\" && !areProductsDisplayed(\".mac-product\")) {\n                menu.innerHTML = ''\n                removeActiveClassFromButtons();\n                targerElement.classList.add('_active');\n                displayMcDonaldsProducts();\n            }\n\n            // Event listener for \"Big Burger\" button click\n            if (targerElement.dataset.shop === \"bigburger\" && !areProductsDisplayed(\".bigburger-product\")) {\n                menu.innerHTML = ''\n                removeActiveClassFromButtons();\n                targerElement.classList.add('_active');\n                displayBigburgerProducts();\n            }\n        });\n\n    }\n}\n\nexport default displayedProducts;","async function getResource(url, callback) {\n    const res = await fetch(url);\n\n    if (!res.ok) {\n        throw new Error(`Could not fetch ${url}, status: ${res.status}`)\n    }\n\n    const data = await res.json();\n    callback(data);\n}\n\nexport { getResource };","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","'use strict'\nimport addToCart from './modules/addtocart';\nimport displayedProducts from './services/displayedProducts';\nimport saveDadaForm from './modules/sendForm';\n\n\nwindow.addEventListener('DOMContentLoaded', () => {\n    displayedProducts();\n    addToCart();\n    saveDadaForm()\n});\n\n\n  \n"],"names":[],"sourceRoot":""}